
'use server';

import { suggestRecipes, type SuggestRecipesInput, type SuggestRecipesOutput } from '@/ai/flows/suggest-recipes';

/**
 * Server Action to get recipe suggestions.
 * This acts as a secure bridge between the client and the AI flow.
 * @param input - The ingredients and preferences from the user.
 * @returns A promise that resolves to the recipe suggestions including images.
 */
export async function getRecipeSuggestions(input: SuggestRecipesInput): Promise<SuggestRecipesOutput> {
    try {
        const result = await suggestRecipes(input);
        if (!result || !result.recipes) {
            console.log("No recipes were generated by the flow.");
            return { recipes: [] };
        }
        return result;
    } catch (error) {
        console.error("Error getting recipe recommendation in server action:", error);
        // In a real app, you might want more sophisticated error handling here.
        // For now, we'll re-throw to let the client-side catch it.
        throw new Error("Failed to generate recipe recommendations.");
    }
}
